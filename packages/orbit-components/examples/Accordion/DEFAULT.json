{
	"imports": "import Accordion from \"@kiwicom/orbit-components/lib/Accordion\";\nimport AccordionSection from \"@kiwicom/orbit-components/lib/AccordionSection\";\nimport ButtonLink from \"@kiwicom/orbit-components/lib/ButtonLink\";\nimport Heading from \"@kiwicom/orbit-components/lib/Heading\";\nimport Seat from \"@kiwicom/orbit-components/lib/Seat\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Text from \"@kiwicom/orbit-components/lib/Text\";",
	"example": "() => {\n  const [expandedSection, setExpandedSection] = React.useState(\"\")\n  const [selectedOutboundSeat, setSelectedOutboundSeat] = React.useState(\"1A\")\n  const [selectedInboundSeat, setSelectedInboundSeat] = React.useState(\"1A\")\n\n  const seatType = (currentSeat, direction) => {\n    if (direction === \"outbound\") {\n      return selectedOutboundSeat === currentSeat ? \"legroom\" : \"default\"\n    }\n\n    return selectedInboundSeat === currentSeat ? \"legroom\" : \"default\"\n  }\n\n  const SeatButton = ({ currentSeat, direction }) => (\n    <ButtonLink\n      compact\n      onClick={() =>\n        direction === \"outbound\"\n          ? setSelectedOutboundSeat(currentSeat)\n          : setSelectedInboundSeat(currentSeat)\n      }\n    >\n      <Seat type={seatType(currentSeat, direction)} />\n    </ButtonLink>\n  )\n\n  const SeatRow = ({ direction, rowNumber }) => (\n    <Stack direction=\"row\" align=\"center\">\n      <SeatButton direction={direction} currentSeat={`${rowNumber}A`} />\n      <SeatButton direction={direction} currentSeat={`${rowNumber}B`} />\n      <Text>{rowNumber}</Text>\n      <SeatButton direction={direction} currentSeat={`${rowNumber}C`} />\n      <SeatButton direction={direction} currentSeat={`${rowNumber}D`} />\n    </Stack>\n  )\n\n  const SeatMap = ({ direction }) => (\n    <Stack>\n      <Stack direction=\"row\" align=\"center\">\n        <Stack inline grow={false} align=\"center\" direction=\"column\">\n          <Text>A</Text>\n          <SeatButton direction={direction} currentSeat=\"1A\" />\n        </Stack>\n        <Stack inline grow={false} align=\"center\" direction=\"column\">\n          <Text>B</Text>\n          <SeatButton direction={direction} currentSeat=\"1B\" />\n        </Stack>\n        <Stack inline grow={false} align=\"center\" direction=\"column\">\n          <Text> </Text>\n          <Text> </Text>\n          <Text>1</Text>\n        </Stack>\n        <Stack inline grow={false} align=\"center\" direction=\"column\">\n          <Text>C</Text>\n          <SeatButton direction={direction} currentSeat=\"1C\" />\n        </Stack>\n        <Stack inline grow={false} align=\"center\" direction=\"column\">\n          <Text>D</Text>\n          <SeatButton direction={direction} currentSeat=\"1D\" />\n        </Stack>\n      </Stack>\n      <SeatRow direction={direction} rowNumber={2} />\n      <SeatRow direction={direction} rowNumber={3} />\n      <SeatRow direction={direction} rowNumber={4} />\n      <SeatRow direction={direction} rowNumber={5} />\n      <SeatRow direction={direction} rowNumber={6} />\n      <SeatRow direction={direction} rowNumber={7} />\n    </Stack>\n  )\n\n  return (\n    <Accordion\n      expandedSection={expandedSection}\n      onExpand={(id) => setExpandedSection(id)}\n    >\n      <AccordionSection\n        id=\"outbound\"\n        header={\n          <Heading as=\"h3\" type=\"title3\">\n            Seating for Barcelona\n            <Icons.FlightDirect ariaLabel=\" to \" />\n            Boston\n          </Heading>\n        }\n      >\n        <SeatMap direction=\"outbound\" />\n      </AccordionSection>\n      <AccordionSection\n        id=\"inbound\"\n        header={\n          <Heading as=\"h3\" type=\"title3\">\n            Seating for Boston\n            <Icons.FlightDirect ariaLabel=\" to \" />\n            Barcelona\n          </Heading>\n        }\n      >\n        <SeatMap direction=\"inbound\" />\n      </AccordionSection>\n    </Accordion>\n  )\n}\n",
	"info": {
		"title": "Default accordion",
		"description": "Accordions default to having at most one section open at a time. The section that is opened is controlled through the section's id and callbacks on the Accordion."
	}
}