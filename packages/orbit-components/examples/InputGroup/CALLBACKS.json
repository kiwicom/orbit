{
	"imports": "import InputField from \"@kiwicom/orbit-components/lib/InputField\";\nimport InputGroup from \"@kiwicom/orbit-components/lib/InputGroup\";\nimport List from \"@kiwicom/orbit-components/lib/List\";\nimport ListItem from \"@kiwicom/orbit-components/lib/ListItem\";\nimport Stack from \"@kiwicom/orbit-components/lib/Stack\";\nimport Text from \"@kiwicom/orbit-components/lib/Text\";\nimport TextLink from \"@kiwicom/orbit-components/lib/TextLink\";",
	"example": "() => {\n  const [month, setMonth] = React.useState(\"\")\n  const [year, setYear] = React.useState(\"\")\n  const [month2, setMonth2] = React.useState(\"\")\n  const [year2, setYear2] = React.useState(\"\")\n  const [actions, setActions] = React.useState([])\n\n  const addAction = (action) => {\n    setActions([...actions, action])\n  }\n\n  const handleGroupChange = (event) => {\n    const { name, value } = event.target\n\n    if (name === \"month\") {\n      setMonth(value)\n    } else {\n      setYear(value)\n    }\n\n    addAction(`The ${name} in the first group changed`)\n  }\n\n  return (\n    <Stack>\n      <InputGroup\n        flex={[\"1 1 4em\"]}\n        label=\"Expiration date\"\n        onChange={handleGroupChange}\n        onFocus={(event) =>\n          addAction(`Focused on ${event.target.name} in first group`)\n        }\n        onBlur={(event) =>\n          addAction(`Unfocused on ${event.target.name} in first group`)\n        }\n      >\n        <InputField\n          placeholder=\"MM\"\n          name=\"month\"\n          value={month}\n          maxValue={12}\n          minValue={1}\n          type=\"number\"\n        />\n        <InputField\n          placeholder=\"YYYY\"\n          name=\"year\"\n          value={year}\n          minValue={2020}\n          type=\"number\"\n        />\n      </InputGroup>\n      <InputGroup flex={[\"1 1 4em\"]} label=\"Expiration date\">\n        <InputField\n          placeholder=\"MM\"\n          value={month2}\n          maxValue={12}\n          minValue={1}\n          onChange={(event) => {\n            setMonth2(event.target.value)\n            addAction(\"The month in the second group changed\")\n          }}\n          onFocus={() => addAction(\"Focused on month in second group\")}\n          onBlur={() => addAction(\"Unfocused on month in second group\")}\n          type=\"number\"\n        />\n        <InputField\n          placeholder=\"YYYY\"\n          value={year2}\n          minValue={2020}\n          onChange={(event) => {\n            setYear2(event.target.value)\n            addAction(\"The year in the second group changed\")\n          }}\n          onFocus={() => addAction(\"Focused on year in second group\")}\n          onBlur={() => addAction(\"Unfocused on year in second group\")}\n          type=\"number\"\n        />\n      </InputGroup>\n      <Text>\n        What has happened?{\" \"}\n        <TextLink type=\"secondary\" onClick={() => setActions([])}>\n          Clear list\n        </TextLink>\n      </Text>\n      {actions && (\n        <List>\n          {actions.map((action, i) => {\n            // eslint-disable-next-line react/no-array-index-key\n            return <ListItem key={i}>{action}</ListItem>\n          })}\n        </List>\n      )}\n    </Stack>\n  )\n}\n",
	"info": {
		"title": "Callbacks",
		"description": "If you want to handle changes for the group as a whole (such as to validate dates in one function), set callbacks (onChange, onFocus, and/or onBlur) for the group as a whole. You can also use callbacks for each field separately."
	}
}